# Set the oh-my-posh theme name globally
OMP_THEME_NAME="night-owl.omp.json"
# OMP_THEME_NAME="atomic.omp.json"
# OMP_THEME_NAME="clean-detailed.omp.json"
# OMP_THEME_NAME="jandedobbeleer.omp.json"
# OMP_THEME_NAME="kushal.omp.json"

# Oh-my-posh theme setup (change OMP_THEME_NAME ^above to switch themes)
if command -v oh-my-posh >/dev/null 2>&1; then
    OMP_THEME_CMD=$(oh-my-posh init zsh --config "$HOME/.cache/oh-my-posh/themes/$OMP_THEME_NAME")
else
    OMP_THEME_CMD=""
fi

# PATH management
if [ -d "$HOME/.local/bin" ] && [[ ":$PATH:" != *":$HOME/.local/bin:"* ]]; then
    export PATH="$PATH:$HOME/.local/bin"
fi

# Apply oh-my-posh theme if available
if [ -n "$OMP_THEME_CMD" ]; then
    eval "$OMP_THEME_CMD"
fi

# Path to Oh My Zsh installation
export ZSH="$HOME/.oh-my-zsh"

# Python virtual environment configuration
PYTHON_VENV_NAME=".venv"
PYTHON_AUTO_VRUN=true
PYTHON_VENV_NAMES=($PYTHON_VENV_NAME venv)

# Oh My Zsh plugins (Linux-appropriate)
plugins=(git gh pip poetry python systemd history-substring-search)

# Source Oh My Zsh
source $ZSH/oh-my-zsh.sh

# Set vi mode
set -o vi

# Load additional plugins if installed
# Syntax highlighting
if [ -f /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
    source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# Auto suggestions
if [ -f /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
    source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

# History substring search
if [ -f /usr/share/zsh-history-substring-search/zsh-history-substring-search.zsh ]; then
    source /usr/share/zsh-history-substring-search/zsh-history-substring-search.zsh
fi

# 1Password login and environment variable loading alias
alias opload='eval $(op signin) && eval $(cat ~/.env | op inject --)'

# Load environment variables from .env file with validation
if [ -f "$HOME/.env" ]; then
    # Check if required variables are referenced in .env
    REQUIRED_VARS=(GITHUB_TOKEN ANSIBLE_SUDO_PASS)
    MISSING_VARS=()
    
    for var in ${REQUIRED_VARS[@]}; do
        if ! grep -q "$var" "$HOME/.env"; then
            MISSING_VARS+=($var)
        fi
    done
    
    if [ ${#MISSING_VARS[@]} -eq 0 ]; then
        echo "Use opload to load environment variables from .env"
    else
        echo "Warning: Missing required variables in .env file:"
        printf '%s\n' "${MISSING_VARS[@]}"
    fi
else
    echo "Warning: .env file not found in $HOME"
fi
